{"version":3,"file":"move-pages-bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./js/iframe/move-pages.js","webpack:///./node_modules/throat/index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/ywiki-plugins/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/iframe/move-pages.js\");\n","/**\n * An API for confluence that runs ajax queries through the $ object to bypass the CORS restriction.\n */\n/*\nfunction deletePage(spaceKey,pageTitle) {\n  return getContent(spaceKey,pageTitle)\n  .then( function (page) {\n    return deletePageById(page.id);\n  });\n}\nfunction deletePageRecursive(spaceKey,pageTitle) {\n  return getContent(spaceKey,pageTitle)\n  .then( function (page) {\n    return deletePageRecursiveInternal( page.id );\n  });\n}\nfunction getAttachment(pageId, attachmentName) {\n  return $.ajax(\"/download/attachments/\" + pageId + \"/\" + attachmentName + \"?api=v2\");\n}\nfunction deletePageById(pageId) {\n  return $.ajax({\n    url: '/rest/api/content/'+encodeURIComponent(pageId),\n    type: 'DELETE'\n  }).fail(errorLogger( \"DELETE page failed\"));\n}\nfunction deletePageRecursiveInternal(pageId) {\n  return getContentById(pageId, 'children.page')\n  .then( function (page) {\n    // first delete children\n    var childrenPromises = [];\n    console.log(\"In deletePageRecursiveInternal for \", page.title);\n    if (page.children && page.children.page && page.children.page.results) {\n      page.children.page.results.forEach( function (child) {\n        childrenPromises.push(deletePageRecursiveInternal(child.id));\n      });\n    }\n    // when all children are deleted\n    return $.when.apply($,childrenPromises)\n    // delete the current page\n    .then( function() {\n      return deletePageById(pageId);\n    });\n  });\n}\nfunction addLabel(pageId, label) {\n  var labels = [];\n  if (!label) return;\n  if (typeof label === \"string\") {\n    labels.push({\"prefix\": \"global\",\"name\": label});\n  } else if (label.length) {\n    for (var i=0;i<label.length;i++) {\n      if (label[i]) {\n        labels.push({\"prefix\": \"global\",\"name\": label[i]});\n      }\n    }\n  } else {\n    throw \"Unknown type of label: \"+label;\n  }\n  return $.ajax(\n    {\n      url: '/rest/api/content/'+encodeURIComponent(pageId)+'/label',\n      type: 'POST',\n      contentType: 'application/json',\n      data: JSON.stringify(labels)\n    }).fail( errorLogger( \"ADD label to page \"+pageId+\" failed\" ));\n}\n*/\nconst MAX_API_CALL_IN_PARALLEL = 3;\nconst throat = require('throat')(MAX_API_CALL_IN_PARALLEL);\n\nasync function movePages(sourceSpaceKey, sourcePageTitle,targetSpaceKey, targetParentTitle) {\n  var sourcePage = await getContent(sourceSpaceKey, sourcePageTitle);\n  return await movePagesById( sourcePage.id, targetSpaceKey, targetParentTitle );\n}\nfunction getAtlToken() {\n  return $('meta[name=ajs-atl-token]').attr(\"content\");\n}\n\nasync function movePagesById (sourcePageId, targetSpaceKey, targetParentTitle) {\n  var url = '/pages/movepage.action?pageId='+encodeURIComponent(sourcePageId)+'&spaceKey='+encodeURIComponent(targetSpaceKey)+'&targetTitle='+encodeURIComponent(targetParentTitle)+'&position=append&atl_token='+getAtlToken()+'&_='+Math.random();\n  console.log(\"Moving page \",sourcePageId,\" under \",targetSpaceKey+\":\"+ targetParentTitle, url);\n  return await $.ajax(url);\n}\n\n\n\n/**\n* Get a page by spaceKey and title from Confluence and returns a deferred for that page.\n* See $.ajax().done()\n* Failures are logged and ignored.\n* The deferred is resolved with the first matching page is any, else it is rejected.\n*/\nasync function getContent(spaceKey,pageTitle,expand) {\n  var expandParam=\"\";\n  if (expand) {\n    expandParam = '&expand='+encodeURIComponent(expand);\n  }\n  var url = '/rest/api/content?type=page&spaceKey='+encodeURIComponent(spaceKey)+'&limit=1&title=' + encodeURIComponent(pageTitle) + expandParam;\n  console.log(\"Getting page content from \" + url);\n  var response = await $.ajax(url);\n  console.log(\"Filtering AJAX response\",response);\n  if (response.results && response.results.length>0) {\n    var page = response.results[0];\n    console.log(\"Returning \",page);\n    return page;\n  } else {\n    throw \"Page Not found: '\"+spaceKey+\":\"+pageTitle+\"'\";\n  }\n}\n\nasync function getContentById(pageId, expand) {\n  var expandParam=\"\";\n  if (expand) {\n    expandParam = '?expand='+encodeURIComponent(expand);\n  }\n  var url = '/rest/api/content/'+encodeURIComponent(pageId) + expandParam;\n  console.log(url);\n  return await $.ajax(url);\n}\n \n/** search for content with CQL\nfor example https://wiki.hybris.com/rest/api/content/search?cql=label=customer%20and%20type=%22page%22%20and%20space=%22ps%22 */\nasync function searchPagesWithCQL(spaceKey, cqlQuery, limit, expand) {\n  if (!limit || limit<0) {\n    limit=15;\n  }\n  var expandParam=(expand?\"&expand=\"+encodeURIComponent(expand):\"\");\n  return await $.ajax('/rest/api/content/search?limit='+encodeURIComponent(limit)+'&cql='+encodeURIComponent(cqlQuery+' and type=page and space=\\''+spaceKey+'\\'')+expandParam);\n}\n\n/**\n* Copy the page \"fromPageTitle\" (without its descendants) under the page \"toPageTitle\",\n* and do a placeholder replacement the page title using the templateProcessor.\n*/\nasync function copyPage(fromSpaceKey, fromPageTitle, toSpaceKey, toPageTitle, templateProcessor) {\n  var pageToCopy = await getContent(fromSpaceKey, fromPageTitle, 'space,body.storage,metadata.labels');\n  templateProcessor.transformPage(pageToCopy);\n  // Create the new page under toPageTitle\n  return await createPage(pageToCopy,toSpaceKey,toPageTitle);\n}\n\nasync function copyPageRecursive(fromSpaceKey, fromPageTitle, toSpaceKey, toPageTitle, templateProcessor, copiedPages) {\n  var sourcePagePromise = getContent(fromSpaceKey, fromPageTitle);\n  var targetPagePromise = getContent(toSpaceKey,toPageTitle, 'space');\n  var pages = await Promise.all(sourcePagePromise,targetPagePromise);\n  return await copyPageRecursiveInternal( pages[0].id, pages[1].space.key, pages[1].id, templateProcessor, copiedPages);\n}\n\nasync function copyPageRecursiveInternal(sourcePageId, targetSpaceKey, targetPageId, templateProcessor, copiedPages) {\n  var pageToCopy = await getContentById(sourcePageId, 'space,body.storage,children.page,metadata.labels');\n  if (templateProcessor.isApplicableTemplatePage(pageToCopy)) {\n    templateProcessor.transformPage(pageToCopy);\n\n    // Create the new page under targetSpaceKey:targetPageId\n    var copiedPage = await createPageUnderPageId(pageToCopy,targetSpaceKey,targetPageId);\n    copiedPages.push(copiedPage);\n    return await copyAllChildren(pageToCopy, targetSpaceKey, copiedPage.id, templateProcessor, copiedPages);\n  } else {\n    console.log(\"Page is not a template, not copied, but children will be copied: \",pageToCopy.title);\n    return await copyAllChildren(pageToCopy, targetSpaceKey, targetPageId, templateProcessor, copiedPages);\n  }\n}\n\nasync function copyAllChildren(pageToCopy, targetSpaceKey, targetPageId, templateProcessor, copiedPages) {\n  // recursively copy all children\n  var copiedChildren = [];\n  console.log(\"In copyAllChildren\", pageToCopy,targetPageId);\n  if (pageToCopy.children && pageToCopy.children.page && pageToCopy.children.page.results) {\n    for (let child of pageToCopy.children.page.results) {\n      copiedChildren.push(await copyPageRecursiveInternal(child.id, targetSpaceKey, targetPageId, templateProcessor, copiedPages));\n    }\n  }\n  return copiedChildren;\n}\n\nasync function createPage(page, targetSpaceKey, targetParentTitle) {\n  var targetParentPage = await getContent(targetSpaceKey,targetParentTitle,'space');\n  console.log(\"targetParentPage: space=\",targetParentPage.space.key, \"id=\", targetParentPage.id, \"title=\", targetParentPage.title);\n  return await createPageUnderPageId(page, targetParentPage.space.key, targetParentPage.id);\n}\n\nasync function createPageUnderPageId(page, targetSpaceKey, targetPageId) {\n  page.ancestors=[ { id: targetPageId } ];\n  console.log(\"New Page\",page);\n  page.space={ key: targetSpaceKey };\n  return await postPage(page);\n}\n\nasync function postPage(page) {\n  return await $.ajax(\n    {\n      url: '/rest/api/content',\n      type: 'POST',\n      contentType: 'application/json',\n      data: JSON.stringify(page)\n    }\n  );\n}\n\nasync function updateContent(page) {\n  return await $.ajax(\n    {\n      url: '/rest/api/content/'+encodeURIComponent(page.id),\n      type: 'PUT',\n      contentType: 'application/json',\n      data: JSON.stringify(page)\n    }\n  );\n}\n\n\n$.fn.confluence = {\n  movePages : movePages,\n  movePagesById : movePagesById,\n  updateContent : updateContent,\n  createPageUnderPageId:createPageUnderPageId,\n  createPage:createPage,\n  copyPage:copyPage,\n  copyPageRecursive:copyPageRecursive,\n  searchPagesWithCQL:searchPagesWithCQL,\n  getContent:getContent,\n  getContentById:getContentById,\n  dumpPageTree:dumpPageTree,\n  chart:chart\n};\n\nasync function dumpPageTree(sourceSpaceKey, sourcePageTitle) {\n  var data = [['Title', 'Parent', 'Number of pages', 'Age']];\n  var startPage = await getContent(sourceSpaceKey, sourcePageTitle);\n  \n  await dumpPageTreeRecursive(startPage.id, null, data);\n  console.log(`*** Found ${data.length} pages total ***`);\n  chart(data);\n}\n\nasync function dumpPageTreeRecursive( pageId, parentTitle, data) {\n  console.log(`Queueing getContentById for ${pageId}`);\n  var pageAndChildren = await throat(() => getContentById(pageId, 'history.lastUpdated,children.page'));\n  data.push([pageAndChildren.title, parentTitle, 1, (new Date(pageAndChildren.history.lastUpdated.when)).getTime()]);\n  if (data.length%100 == 0) console.log(`Found ${data.length} pages`);\n  var childrenP = [];\n  var childrenPages = pageAndChildren.children.page;\n  while (childrenPages && childrenPages.size>0) {\n    for (let child of childrenPages.results) {\n      childrenP.push(dumpPageTreeRecursive(child.id, pageAndChildren.title, data));\n    }\n    // get next page if any\n    if (childrenPages._links.next) {\n      console.log(`Queueing GET next page of children for ${pageAndChildren.title}: ${childrenPages._links.next}`);\n      childrenPages = await throat(() => $.ajax(childrenPages._links.next));\n    } else {\n      childrenPages=false;\n    }\n  }\n\n\n\n  await Promise.all(childrenP);\n}\n\nfunction chart(dataTable) {\n\n  google.charts.load('current', {'packages':['treemap']});\n  google.charts.setOnLoadCallback(drawChart);\n  function drawChart() {\n    console.log(\"DRAWING\");\n    var data = google.visualization.arrayToDataTable(dataTable);\n\n    tree = new google.visualization.TreeMap(document.getElementById('chart_div'));\n\n    tree.draw(data, {\n      minColor: '#f00',\n      midColor: '#ddd',\n      maxColor: '#0d0',\n      headerHeight: 15,\n      fontColor: 'black',\n      showScale: true,\n      maxPostDepth: 1,\n      minColorValue: new Date('2016-01-01T00:00:00.000+00:00').getTime(),\n      maxColorValue: new Date('2018-01-01T00:00:00.000+00:00').getTime(),\n      useWeightedAverageForAggregation: true\n    });\n\n  }\n}\n\nsetTimeout(() => dumpPageTree(\"ps\", \"Projects France\"), 2000);\n","'use strict';\n\nmodule.exports = function (PromiseArgument) {\n  var Promise;\n  function throat(size, fn) {\n    var queue = new Queue();\n    function run(fn, self, args) {\n      if (size) {\n        size--;\n        var result = new Promise(function (resolve) {\n          resolve(fn.apply(self, args));\n        });\n        result.then(release, release);\n        return result;\n      } else {\n        return new Promise(function (resolve) {\n          queue.push(new Delayed(resolve, fn, self, args));\n        });\n      }\n    }\n    function release() {\n      size++;\n      if (!queue.isEmpty()) {\n        var next = queue.shift();\n        next.resolve(run(next.fn, next.self, next.args));\n      }\n    }\n    if (typeof size === 'function') {\n      var temp = fn;\n      fn = size;\n      size = temp;\n    }\n    if (typeof size !== 'number') {\n      throw new TypeError(\n        'Expected throat size to be a number but got ' + typeof size\n      );\n    }\n    if (fn !== undefined && typeof fn !== 'function') {\n      throw new TypeError(\n        'Expected throat fn to be a function but got ' + typeof fn\n      );\n    }\n    if (typeof fn === 'function') {\n      return function () {\n        var args = [];\n        for (var i = 0; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args);\n      };\n    } else {\n      return function (fn) {\n        if (typeof fn !== 'function') {\n          throw new TypeError(\n            'Expected throat fn to be a function but got ' + typeof fn\n          );\n        }\n        var args = [];\n        for (var i = 1; i < arguments.length; i++) {\n          args.push(arguments[i]);\n        }\n        return run(fn, this, args);\n      };\n    }\n  }\n  if (arguments.length === 1 && typeof PromiseArgument === 'function') {\n    Promise = PromiseArgument;\n    return throat;\n  } else {\n    Promise = module.exports.Promise;\n    if (typeof Promise !== 'function') {\n      throw new Error(\n        'You must provide a Promise polyfill for this library to work in older environments'\n      );\n    }\n    return throat(arguments[0], arguments[1]);\n  }\n};\n\n/* istanbul ignore next */\nif (typeof Promise === 'function') {\n  module.exports.Promise = Promise;\n}\n\nfunction Delayed(resolve, fn, self, args) {\n  this.resolve = resolve;\n  this.fn = fn;\n  this.self = self || null;\n  this.args = args;\n}\n\nfunction Queue() {\n  this._s1 = [];\n  this._s2 = [];\n}\n\nQueue.prototype.push = function (value) {\n  this._s1.push(value);\n};\n\nQueue.prototype.shift = function () {\n  var s2 = this._s2;\n  if (s2.length === 0) {\n    var s1 = this._s1;\n    if (s1.length === 0) {\n      return;\n    }\n    this._s1 = s2;\n    s2 = this._s2 = s1.reverse();\n  }\n  return s2.pop();\n};\n\nQueue.prototype.isEmpty = function () {\n  return !this._s1.length && !this._s2.length;\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnsourceRoot":""}